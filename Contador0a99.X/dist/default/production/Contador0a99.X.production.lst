

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr 17 20:51:20 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	nvCOMRAM
    55  00000B                     __pnvCOMRAM:
    56                           	opt stack 0
    57  00000B                     _milhar:
    58                           	opt stack 0
    59  00000B                     	ds	2
    60  00000D                     _centena:
    61                           	opt stack 0
    62  00000D                     	ds	2
    63  00000F                     _unidade:
    64                           	opt stack 0
    65  00000F                     	ds	2
    66  000011                     _dezena:
    67                           	opt stack 0
    68  000011                     	ds	2
    69  0000                     _TRISC	set	3988
    70  0000                     _TRISD	set	3989
    71  0000                     _PORTD	set	3971
    72  0000                     _RC6	set	31766
    73  0000                     _RC5	set	31765
    74  0000                     _RC4	set	31764
    75  0000                     _RC2	set	31762
    76  0000                     _RC1	set	31761
    77  0000                     _RC0	set	31760
    78                           
    79                           ; #config settings
    80                           
    81                           	psect	cinit
    82  007BCC                     __pcinit:
    83                           	opt stack 0
    84  007BCC                     start_initialization:
    85                           	opt stack 0
    86  007BCC                     __initialization:
    87                           	opt stack 0
    88                           
    89                           ; Clear objects allocated to COMRAM (2 bytes)
    90  007BCC  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
    91  007BCE  6A13               	clrf	__pbssCOMRAM& (0+255),c
    92  007BD0                     end_of_initialization:
    93                           	opt stack 0
    94  007BD0                     __end_of__initialization:
    95                           	opt stack 0
    96  007BD0  0E00               	movlw	low (__Lmediumconst shr (0+16))
    97  007BD2  6EF8               	movwf	tblptru,c
    98  007BD4  0100               	movlb	0
    99  007BD6  EFFA  F03D         	goto	_main	;jump to C main() function
   100                           tblptru	equ	0xFF8
   101                           
   102                           	psect	bssCOMRAM
   103  000013                     __pbssCOMRAM:
   104                           	opt stack 0
   105  000013                     _cnt:
   106                           	opt stack 0
   107  000013                     	ds	2
   108                           tblptru	equ	0xFF8
   109                           
   110                           	psect	cstackCOMRAM
   111  000001                     __pcstackCOMRAM:
   112                           	opt stack 0
   113  000001                     ?___awdiv:
   114                           	opt stack 0
   115  000001                     ?___awmod:
   116                           	opt stack 0
   117  000001                     ___awdiv@dividend:
   118                           	opt stack 0
   119  000001                     ___awmod@dividend:
   120                           	opt stack 0
   121  000001                     delay@x:
   122                           	opt stack 0
   123  000001                     delay_mx@x:
   124                           	opt stack 0
   125                           
   126                           ; 4 bytes @ 0x0
   127  000001                     	ds	2
   128  000003                     ___awdiv@divisor:
   129                           	opt stack 0
   130  000003                     ___awmod@divisor:
   131                           	opt stack 0
   132                           
   133                           ; 2 bytes @ 0x2
   134  000003                     	ds	2
   135  000005                     ___awdiv@counter:
   136                           	opt stack 0
   137  000005                     ___awmod@counter:
   138                           	opt stack 0
   139                           
   140                           ; 1 bytes @ 0x4
   141  000005                     	ds	1
   142  000006                     ___awdiv@sign:
   143                           	opt stack 0
   144  000006                     ___awmod@sign:
   145                           	opt stack 0
   146                           
   147                           ; 1 bytes @ 0x5
   148  000006                     	ds	1
   149  000007                     ___awdiv@quotient:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x6
   153  000007                     	ds	2
   154  000009                     ??_mostrar:
   155                           
   156                           ; 1 bytes @ 0x8
   157  000009                     	ds	2
   158  00000B                     tblptru	equ	0xFF8
   159                           
   160                           ; 1 bytes @ 0xA
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 155 in file "Contador0a99.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   180 ;;      Params:         0       0       0       0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels required when called:    2
   186 ;; This function calls:
   187 ;;		_delay
   188 ;;		_incrementa
   189 ;;		_mostrar
   190 ;; This function is called by:
   191 ;;		Startup code after reset
   192 ;; This function uses a non-reentrant model
   193 ;;
   194                           
   195                           	psect	text0
   196  007BF4                     __ptext0:
   197                           	opt stack 0
   198  007BF4                     _main:
   199                           	opt stack 29
   200                           
   201                           ;Contador0a99.c: 156: cnt=0;
   202                           
   203                           ;incstack = 0
   204  007BF4  0E00               	movlw	0
   205  007BF6  6E14               	movwf	_cnt+1,c
   206  007BF8  0E00               	movlw	0
   207  007BFA  6E13               	movwf	_cnt,c
   208                           
   209                           ;Contador0a99.c: 157: TRISD=0b00000000;
   210  007BFC  0E00               	movlw	0
   211  007BFE  6E95               	movwf	3989,c	;volatile
   212                           
   213                           ;Contador0a99.c: 158: TRISC=0b00000001;
   214  007C00  0E01               	movlw	1
   215  007C02  6E94               	movwf	3988,c	;volatile
   216  007C04                     
   217                           ;Contador0a99.c: 161: mostrar();
   218  007C04  ECBA  F03E         	call	_mostrar	;wreg free
   219                           
   220                           ;Contador0a99.c: 162: if (RC0==1){
   221  007C08  B082               	btfsc	3970,0,c	;volatile
   222                           
   223                           ;Contador0a99.c: 163: incrementa();
   224  007C0A  ECED  F03D         	call	_incrementa	;wreg free
   225                           
   226                           ;Contador0a99.c: 164: }
   227                           ;Contador0a99.c: 165: delay();
   228  007C0E  EC0A  F03E         	call	_delay	;wreg free
   229  007C12  D7F8               	goto	l101
   230  007C14                     __end_of_main:
   231                           	opt stack 0
   232                           tblptru	equ	0xFF8
   233                           
   234 ;; *************** function _mostrar *****************
   235 ;; Defined at:
   236 ;;		line 29 in file "Contador0a99.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : 0/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   250 ;;      Params:         0       0       0       0       0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0       0       0       0       0
   252 ;;      Temps:          2       0       0       0       0       0       0       0       0
   253 ;;      Totals:         2       0       0       0       0       0       0       0       0
   254 ;;Total ram usage:        2 bytes
   255 ;; Hardware stack levels used:    1
   256 ;; Hardware stack levels required when called:    1
   257 ;; This function calls:
   258 ;;		___awdiv
   259 ;;		___awmod
   260 ;;		_delay_mx
   261 ;; This function is called by:
   262 ;;		_main
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           	psect	text1
   267  007D74                     __ptext1:
   268                           	opt stack 0
   269  007D74                     _mostrar:
   270                           	opt stack 29
   271                           
   272                           ;Contador0a99.c: 30: milhar=cnt/1000;
   273                           
   274                           ;incstack = 0
   275  007D74  C013  F001         	movff	_cnt,___awdiv@dividend
   276  007D78  C014  F002         	movff	_cnt+1,___awdiv@dividend+1
   277  007D7C  0E03               	movlw	3
   278  007D7E  6E04               	movwf	___awdiv@divisor+1,c
   279  007D80  0EE8               	movlw	232
   280  007D82  6E03               	movwf	___awdiv@divisor,c
   281  007D84  EC78  F03E         	call	___awdiv	;wreg free
   282  007D88  C001  F00B         	movff	?___awdiv,_milhar
   283  007D8C  C002  F00C         	movff	?___awdiv+1,_milhar+1
   284                           
   285                           ;Contador0a99.c: 31: centena=cnt/100;
   286  007D90  C013  F001         	movff	_cnt,___awdiv@dividend
   287  007D94  C014  F002         	movff	_cnt+1,___awdiv@dividend+1
   288  007D98  0E00               	movlw	0
   289  007D9A  6E04               	movwf	___awdiv@divisor+1,c
   290  007D9C  0E64               	movlw	100
   291  007D9E  6E03               	movwf	___awdiv@divisor,c
   292  007DA0  EC78  F03E         	call	___awdiv	;wreg free
   293  007DA4  C001  F00D         	movff	?___awdiv,_centena
   294  007DA8  C002  F00E         	movff	?___awdiv+1,_centena+1
   295                           
   296                           ;Contador0a99.c: 32: dezena=cnt/10;
   297  007DAC  C013  F001         	movff	_cnt,___awdiv@dividend
   298  007DB0  C014  F002         	movff	_cnt+1,___awdiv@dividend+1
   299  007DB4  0E00               	movlw	0
   300  007DB6  6E04               	movwf	___awdiv@divisor+1,c
   301  007DB8  0E0A               	movlw	10
   302  007DBA  6E03               	movwf	___awdiv@divisor,c
   303  007DBC  EC78  F03E         	call	___awdiv	;wreg free
   304  007DC0  C001  F011         	movff	?___awdiv,_dezena
   305  007DC4  C002  F012         	movff	?___awdiv+1,_dezena+1
   306                           
   307                           ;Contador0a99.c: 33: unidade=cnt%10;
   308  007DC8  C013  F001         	movff	_cnt,___awmod@dividend
   309  007DCC  C014  F002         	movff	_cnt+1,___awmod@dividend+1
   310  007DD0  0E00               	movlw	0
   311  007DD2  6E04               	movwf	___awmod@divisor+1,c
   312  007DD4  0E0A               	movlw	10
   313  007DD6  6E03               	movwf	___awmod@divisor,c
   314  007DD8  EC40  F03E         	call	___awmod	;wreg free
   315  007DDC  C001  F00F         	movff	?___awmod,_unidade
   316  007DE0  C002  F010         	movff	?___awmod+1,_unidade+1
   317                           
   318                           ;Contador0a99.c: 36: switch (milhar){
   319  007DE4  D015               	goto	l48
   320  007DE6  0E3F               	movlw	63
   321  007DE8  D011               	goto	L9
   322  007DEA  0E06               	movlw	6
   323  007DEC  D00F               	goto	L9
   324  007DEE  0E5B               	movlw	91
   325  007DF0  D00D               	goto	L9
   326  007DF2  0E4F               	movlw	79
   327  007DF4  D00B               	goto	L9
   328  007DF6  0E66               	movlw	102
   329  007DF8  D009               	goto	L9
   330  007DFA  0E6D               	movlw	109
   331  007DFC  D007               	goto	L9
   332  007DFE  0E7D               	movlw	125
   333  007E00  D005               	goto	L9
   334  007E02  0E07               	movlw	7
   335  007E04  D003               	goto	L9
   336  007E06  0E7F               	movlw	127
   337  007E08  D001               	goto	L9
   338  007E0A  0E6F               	movlw	111
   339  007E0C                     L9:
   340  007E0C  6E83               	movwf	3971,c	;volatile
   341                           
   342                           ;Contador0a99.c: 57: }
   343                           
   344                           ;Contador0a99.c: 56: break;
   345  007E0E  D027               	goto	l50
   346  007E10                     l48:
   347  007E10  C00B  F009         	movff	_milhar,??_mostrar
   348  007E14  C00C  F00A         	movff	_milhar+1,??_mostrar+1
   349                           
   350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   351                           ; Switch size 1, requested type "space"
   352                           ; Number of cases is 1, Range of values is 0 to 0
   353                           ; switch strategies available:
   354                           ; Name         Instructions Cycles
   355                           ; simple_byte            4     3 (average)
   356                           ;	Chosen strategy is simple_byte
   357  007E18  500A               	movf	??_mostrar+1,w,c
   358  007E1A  0A00               	xorlw	0	; case 0
   359  007E1C  A4D8               	btfss	status,2,c
   360  007E1E  D01F               	goto	l50
   361                           
   362                           ; Switch size 1, requested type "space"
   363                           ; Number of cases is 10, Range of values is 0 to 9
   364                           ; switch strategies available:
   365                           ; Name         Instructions Cycles
   366                           ; simple_byte           31    16 (average)
   367                           ;	Chosen strategy is simple_byte
   368  007E20  5009               	movf	??_mostrar,w,c
   369  007E22  0A00               	xorlw	0	; case 0
   370  007E24  B4D8               	btfsc	status,2,c
   371  007E26  D7DF               	goto	l49
   372  007E28  0A01               	xorlw	1	; case 1
   373  007E2A  B4D8               	btfsc	status,2,c
   374  007E2C  D7DE               	goto	l51
   375  007E2E  0A03               	xorlw	3	; case 2
   376  007E30  B4D8               	btfsc	status,2,c
   377  007E32  D7DD               	goto	l52
   378  007E34  0A01               	xorlw	1	; case 3
   379  007E36  B4D8               	btfsc	status,2,c
   380  007E38  D7DC               	goto	l53
   381  007E3A  0A07               	xorlw	7	; case 4
   382  007E3C  B4D8               	btfsc	status,2,c
   383  007E3E  D7DB               	goto	l54
   384  007E40  0A01               	xorlw	1	; case 5
   385  007E42  B4D8               	btfsc	status,2,c
   386  007E44  D7DA               	goto	l55
   387  007E46  0A03               	xorlw	3	; case 6
   388  007E48  B4D8               	btfsc	status,2,c
   389  007E4A  D7D9               	goto	l56
   390  007E4C  0A01               	xorlw	1	; case 7
   391  007E4E  B4D8               	btfsc	status,2,c
   392  007E50  D7D8               	goto	l57
   393  007E52  0A0F               	xorlw	15	; case 8
   394  007E54  B4D8               	btfsc	status,2,c
   395  007E56  D7D7               	goto	l58
   396  007E58  0A01               	xorlw	1	; case 9
   397  007E5A  B4D8               	btfsc	status,2,c
   398  007E5C  D7D6               	goto	l59
   399  007E5E                     l50:
   400                           
   401                           ;Contador0a99.c: 58: RC1=1;
   402  007E5E  8282               	bsf	3970,1,c	;volatile
   403                           
   404                           ;Contador0a99.c: 59: RC2=0;
   405  007E60  9482               	bcf	3970,2,c	;volatile
   406                           
   407                           ;Contador0a99.c: 60: RC4=0;
   408  007E62  9882               	bcf	3970,4,c	;volatile
   409                           
   410                           ;Contador0a99.c: 61: RC5=0;
   411  007E64  9A82               	bcf	3970,5,c	;volatile
   412                           
   413                           ;Contador0a99.c: 62: RC6=0;
   414  007E66  9C82               	bcf	3970,6,c	;volatile
   415                           
   416                           ;Contador0a99.c: 63: delay_mx();
   417  007E68  EC25  F03E         	call	_delay_mx	;wreg free
   418                           
   419                           ;Contador0a99.c: 66: switch (centena){
   420  007E6C  D015               	goto	l60
   421  007E6E  0E3F               	movlw	63
   422  007E70  D011               	goto	L18
   423  007E72  0E06               	movlw	6
   424  007E74  D00F               	goto	L18
   425  007E76  0E5B               	movlw	91
   426  007E78  D00D               	goto	L18
   427  007E7A  0E4F               	movlw	79
   428  007E7C  D00B               	goto	L18
   429  007E7E  0E66               	movlw	102
   430  007E80  D009               	goto	L18
   431  007E82  0E6D               	movlw	109
   432  007E84  D007               	goto	L18
   433  007E86  0E7D               	movlw	125
   434  007E88  D005               	goto	L18
   435  007E8A  0E07               	movlw	7
   436  007E8C  D003               	goto	L18
   437  007E8E  0E7F               	movlw	127
   438  007E90  D001               	goto	L18
   439  007E92  0E6F               	movlw	111
   440  007E94                     L18:
   441  007E94  6E83               	movwf	3971,c	;volatile
   442                           
   443                           ;Contador0a99.c: 87: }
   444                           
   445                           ;Contador0a99.c: 86: break;
   446  007E96  D027               	goto	l62
   447  007E98                     l60:
   448  007E98  C00D  F009         	movff	_centena,??_mostrar
   449  007E9C  C00E  F00A         	movff	_centena+1,??_mostrar+1
   450                           
   451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   452                           ; Switch size 1, requested type "space"
   453                           ; Number of cases is 1, Range of values is 0 to 0
   454                           ; switch strategies available:
   455                           ; Name         Instructions Cycles
   456                           ; simple_byte            4     3 (average)
   457                           ;	Chosen strategy is simple_byte
   458  007EA0  500A               	movf	??_mostrar+1,w,c
   459  007EA2  0A00               	xorlw	0	; case 0
   460  007EA4  A4D8               	btfss	status,2,c
   461  007EA6  D01F               	goto	l62
   462                           
   463                           ; Switch size 1, requested type "space"
   464                           ; Number of cases is 10, Range of values is 0 to 9
   465                           ; switch strategies available:
   466                           ; Name         Instructions Cycles
   467                           ; simple_byte           31    16 (average)
   468                           ;	Chosen strategy is simple_byte
   469  007EA8  5009               	movf	??_mostrar,w,c
   470  007EAA  0A00               	xorlw	0	; case 0
   471  007EAC  B4D8               	btfsc	status,2,c
   472  007EAE  D7DF               	goto	l61
   473  007EB0  0A01               	xorlw	1	; case 1
   474  007EB2  B4D8               	btfsc	status,2,c
   475  007EB4  D7DE               	goto	l63
   476  007EB6  0A03               	xorlw	3	; case 2
   477  007EB8  B4D8               	btfsc	status,2,c
   478  007EBA  D7DD               	goto	l64
   479  007EBC  0A01               	xorlw	1	; case 3
   480  007EBE  B4D8               	btfsc	status,2,c
   481  007EC0  D7DC               	goto	l65
   482  007EC2  0A07               	xorlw	7	; case 4
   483  007EC4  B4D8               	btfsc	status,2,c
   484  007EC6  D7DB               	goto	l66
   485  007EC8  0A01               	xorlw	1	; case 5
   486  007ECA  B4D8               	btfsc	status,2,c
   487  007ECC  D7DA               	goto	l67
   488  007ECE  0A03               	xorlw	3	; case 6
   489  007ED0  B4D8               	btfsc	status,2,c
   490  007ED2  D7D9               	goto	l68
   491  007ED4  0A01               	xorlw	1	; case 7
   492  007ED6  B4D8               	btfsc	status,2,c
   493  007ED8  D7D8               	goto	l69
   494  007EDA  0A0F               	xorlw	15	; case 8
   495  007EDC  B4D8               	btfsc	status,2,c
   496  007EDE  D7D7               	goto	l70
   497  007EE0  0A01               	xorlw	1	; case 9
   498  007EE2  B4D8               	btfsc	status,2,c
   499  007EE4  D7D6               	goto	l71
   500  007EE6                     l62:
   501                           
   502                           ;Contador0a99.c: 89: RC1=0;
   503  007EE6  9282               	bcf	3970,1,c	;volatile
   504                           
   505                           ;Contador0a99.c: 90: RC2=1;
   506  007EE8  8482               	bsf	3970,2,c	;volatile
   507                           
   508                           ;Contador0a99.c: 91: RC4=0;
   509  007EEA  9882               	bcf	3970,4,c	;volatile
   510                           
   511                           ;Contador0a99.c: 92: RC5=0;
   512  007EEC  9A82               	bcf	3970,5,c	;volatile
   513                           
   514                           ;Contador0a99.c: 93: delay_mx();
   515  007EEE  EC25  F03E         	call	_delay_mx	;wreg free
   516                           
   517                           ;Contador0a99.c: 96: switch (dezena){
   518  007EF2  D015               	goto	l72
   519  007EF4  0E3F               	movlw	63
   520  007EF6  D011               	goto	L27
   521  007EF8  0E06               	movlw	6
   522  007EFA  D00F               	goto	L27
   523  007EFC  0E5B               	movlw	91
   524  007EFE  D00D               	goto	L27
   525  007F00  0E4F               	movlw	79
   526  007F02  D00B               	goto	L27
   527  007F04  0E66               	movlw	102
   528  007F06  D009               	goto	L27
   529  007F08  0E6D               	movlw	109
   530  007F0A  D007               	goto	L27
   531  007F0C  0E7D               	movlw	125
   532  007F0E  D005               	goto	L27
   533  007F10  0E07               	movlw	7
   534  007F12  D003               	goto	L27
   535  007F14  0E7F               	movlw	127
   536  007F16  D001               	goto	L27
   537  007F18  0E6F               	movlw	111
   538  007F1A                     L27:
   539  007F1A  6E83               	movwf	3971,c	;volatile
   540                           
   541                           ;Contador0a99.c: 117: }
   542                           
   543                           ;Contador0a99.c: 116: break;
   544  007F1C  D027               	goto	l74
   545  007F1E                     l72:
   546  007F1E  C011  F009         	movff	_dezena,??_mostrar
   547  007F22  C012  F00A         	movff	_dezena+1,??_mostrar+1
   548                           
   549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   550                           ; Switch size 1, requested type "space"
   551                           ; Number of cases is 1, Range of values is 0 to 0
   552                           ; switch strategies available:
   553                           ; Name         Instructions Cycles
   554                           ; simple_byte            4     3 (average)
   555                           ;	Chosen strategy is simple_byte
   556  007F26  500A               	movf	??_mostrar+1,w,c
   557  007F28  0A00               	xorlw	0	; case 0
   558  007F2A  A4D8               	btfss	status,2,c
   559  007F2C  D01F               	goto	l74
   560                           
   561                           ; Switch size 1, requested type "space"
   562                           ; Number of cases is 10, Range of values is 0 to 9
   563                           ; switch strategies available:
   564                           ; Name         Instructions Cycles
   565                           ; simple_byte           31    16 (average)
   566                           ;	Chosen strategy is simple_byte
   567  007F2E  5009               	movf	??_mostrar,w,c
   568  007F30  0A00               	xorlw	0	; case 0
   569  007F32  B4D8               	btfsc	status,2,c
   570  007F34  D7DF               	goto	l73
   571  007F36  0A01               	xorlw	1	; case 1
   572  007F38  B4D8               	btfsc	status,2,c
   573  007F3A  D7DE               	goto	l75
   574  007F3C  0A03               	xorlw	3	; case 2
   575  007F3E  B4D8               	btfsc	status,2,c
   576  007F40  D7DD               	goto	l76
   577  007F42  0A01               	xorlw	1	; case 3
   578  007F44  B4D8               	btfsc	status,2,c
   579  007F46  D7DC               	goto	l77
   580  007F48  0A07               	xorlw	7	; case 4
   581  007F4A  B4D8               	btfsc	status,2,c
   582  007F4C  D7DB               	goto	l78
   583  007F4E  0A01               	xorlw	1	; case 5
   584  007F50  B4D8               	btfsc	status,2,c
   585  007F52  D7DA               	goto	l79
   586  007F54  0A03               	xorlw	3	; case 6
   587  007F56  B4D8               	btfsc	status,2,c
   588  007F58  D7D9               	goto	l80
   589  007F5A  0A01               	xorlw	1	; case 7
   590  007F5C  B4D8               	btfsc	status,2,c
   591  007F5E  D7D8               	goto	l81
   592  007F60  0A0F               	xorlw	15	; case 8
   593  007F62  B4D8               	btfsc	status,2,c
   594  007F64  D7D7               	goto	l82
   595  007F66  0A01               	xorlw	1	; case 9
   596  007F68  B4D8               	btfsc	status,2,c
   597  007F6A  D7D6               	goto	l83
   598  007F6C                     l74:
   599                           
   600                           ;Contador0a99.c: 118: RC1=0;
   601  007F6C  9282               	bcf	3970,1,c	;volatile
   602                           
   603                           ;Contador0a99.c: 119: RC2=0;
   604  007F6E  9482               	bcf	3970,2,c	;volatile
   605                           
   606                           ;Contador0a99.c: 120: RC4=1;
   607  007F70  8882               	bsf	3970,4,c	;volatile
   608                           
   609                           ;Contador0a99.c: 121: RC5=0;
   610  007F72  9A82               	bcf	3970,5,c	;volatile
   611                           
   612                           ;Contador0a99.c: 122: delay_mx();
   613  007F74  EC25  F03E         	call	_delay_mx	;wreg free
   614                           
   615                           ;Contador0a99.c: 124: switch (unidade){
   616  007F78  D015               	goto	l84
   617  007F7A  0E3F               	movlw	63
   618  007F7C  D011               	goto	L36
   619  007F7E  0E06               	movlw	6
   620  007F80  D00F               	goto	L36
   621  007F82  0E5B               	movlw	91
   622  007F84  D00D               	goto	L36
   623  007F86  0E4F               	movlw	79
   624  007F88  D00B               	goto	L36
   625  007F8A  0E66               	movlw	102
   626  007F8C  D009               	goto	L36
   627  007F8E  0E6D               	movlw	109
   628  007F90  D007               	goto	L36
   629  007F92  0E7D               	movlw	125
   630  007F94  D005               	goto	L36
   631  007F96  0E07               	movlw	7
   632  007F98  D003               	goto	L36
   633  007F9A  0E7F               	movlw	127
   634  007F9C  D001               	goto	L36
   635  007F9E  0E6F               	movlw	111
   636  007FA0                     L36:
   637  007FA0  6E83               	movwf	3971,c	;volatile
   638                           
   639                           ;Contador0a99.c: 145: }
   640                           
   641                           ;Contador0a99.c: 144: break;
   642  007FA2  D027               	goto	l86
   643  007FA4                     l84:
   644  007FA4  C00F  F009         	movff	_unidade,??_mostrar
   645  007FA8  C010  F00A         	movff	_unidade+1,??_mostrar+1
   646                           
   647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   648                           ; Switch size 1, requested type "space"
   649                           ; Number of cases is 1, Range of values is 0 to 0
   650                           ; switch strategies available:
   651                           ; Name         Instructions Cycles
   652                           ; simple_byte            4     3 (average)
   653                           ;	Chosen strategy is simple_byte
   654  007FAC  500A               	movf	??_mostrar+1,w,c
   655  007FAE  0A00               	xorlw	0	; case 0
   656  007FB0  A4D8               	btfss	status,2,c
   657  007FB2  D01F               	goto	l86
   658                           
   659                           ; Switch size 1, requested type "space"
   660                           ; Number of cases is 10, Range of values is 0 to 9
   661                           ; switch strategies available:
   662                           ; Name         Instructions Cycles
   663                           ; simple_byte           31    16 (average)
   664                           ;	Chosen strategy is simple_byte
   665  007FB4  5009               	movf	??_mostrar,w,c
   666  007FB6  0A00               	xorlw	0	; case 0
   667  007FB8  B4D8               	btfsc	status,2,c
   668  007FBA  D7DF               	goto	l85
   669  007FBC  0A01               	xorlw	1	; case 1
   670  007FBE  B4D8               	btfsc	status,2,c
   671  007FC0  D7DE               	goto	l87
   672  007FC2  0A03               	xorlw	3	; case 2
   673  007FC4  B4D8               	btfsc	status,2,c
   674  007FC6  D7DD               	goto	l88
   675  007FC8  0A01               	xorlw	1	; case 3
   676  007FCA  B4D8               	btfsc	status,2,c
   677  007FCC  D7DC               	goto	l89
   678  007FCE  0A07               	xorlw	7	; case 4
   679  007FD0  B4D8               	btfsc	status,2,c
   680  007FD2  D7DB               	goto	l90
   681  007FD4  0A01               	xorlw	1	; case 5
   682  007FD6  B4D8               	btfsc	status,2,c
   683  007FD8  D7DA               	goto	l91
   684  007FDA  0A03               	xorlw	3	; case 6
   685  007FDC  B4D8               	btfsc	status,2,c
   686  007FDE  D7D9               	goto	l92
   687  007FE0  0A01               	xorlw	1	; case 7
   688  007FE2  B4D8               	btfsc	status,2,c
   689  007FE4  D7D8               	goto	l93
   690  007FE6  0A0F               	xorlw	15	; case 8
   691  007FE8  B4D8               	btfsc	status,2,c
   692  007FEA  D7D7               	goto	l94
   693  007FEC  0A01               	xorlw	1	; case 9
   694  007FEE  B4D8               	btfsc	status,2,c
   695  007FF0  D7D6               	goto	l95
   696  007FF2                     l86:
   697                           
   698                           ;Contador0a99.c: 146: RC1=0;
   699  007FF2  9282               	bcf	3970,1,c	;volatile
   700                           
   701                           ;Contador0a99.c: 147: RC2=0;
   702  007FF4  9482               	bcf	3970,2,c	;volatile
   703                           
   704                           ;Contador0a99.c: 148: RC4=0;
   705  007FF6  9882               	bcf	3970,4,c	;volatile
   706                           
   707                           ;Contador0a99.c: 149: RC5=1;
   708  007FF8  8A82               	bsf	3970,5,c	;volatile
   709                           
   710                           ;Contador0a99.c: 150: delay_mx();
   711  007FFA  EC25  F03E         	call	_delay_mx	;wreg free
   712  007FFE  0012               	return		;funcret
   713  008000                     __end_of_mostrar:
   714                           	opt stack 0
   715                           tblptru	equ	0xFF8
   716                           status	equ	0xFD8
   717                           
   718 ;; *************** function _delay_mx *****************
   719 ;; Defined at:
   720 ;;		line 16 in file "Contador0a99.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  x               4    0[COMRAM] long 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   734 ;;      Params:         0       0       0       0       0       0       0       0       0
   735 ;;      Locals:         4       0       0       0       0       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0       0       0       0       0
   737 ;;      Totals:         4       0       0       0       0       0       0       0       0
   738 ;;Total ram usage:        4 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_mostrar
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text2
   748  007C4A                     __ptext2:
   749                           	opt stack 0
   750  007C4A                     _delay_mx:
   751                           	opt stack 29
   752                           
   753                           ;Contador0a99.c: 17: long x=5000;
   754                           
   755                           ;incstack = 0
   756  007C4A  0E88               	movlw	136
   757  007C4C  6E01               	movwf	delay_mx@x,c
   758  007C4E  0E13               	movlw	19
   759  007C50  6E02               	movwf	delay_mx@x+1,c
   760  007C52  0E00               	movlw	0
   761  007C54  6E03               	movwf	delay_mx@x+2,c
   762  007C56  0E00               	movlw	0
   763  007C58  6E04               	movwf	delay_mx@x+3,c
   764                           
   765                           ;Contador0a99.c: 18: while(x>0) x--;
   766  007C5A  D008               	goto	l37
   767  007C5C                     l729:
   768  007C5C  0EFF               	movlw	255
   769  007C5E  2601               	addwf	delay_mx@x,f,c
   770  007C60  0EFF               	movlw	255
   771  007C62  2202               	addwfc	delay_mx@x+1,f,c
   772  007C64  0EFF               	movlw	255
   773  007C66  2203               	addwfc	delay_mx@x+2,f,c
   774  007C68  0EFF               	movlw	255
   775  007C6A  2204               	addwfc	delay_mx@x+3,f,c
   776  007C6C                     l37:
   777  007C6C  BE04               	btfsc	delay_mx@x+3,7,c
   778  007C6E  0012               	return	
   779  007C70  5004               	movf	delay_mx@x+3,w,c
   780  007C72  1003               	iorwf	delay_mx@x+2,w,c
   781  007C74  1002               	iorwf	delay_mx@x+1,w,c
   782  007C76  E1F2               	bnz	l729
   783  007C78  0401               	decf	delay_mx@x,w,c
   784  007C7A  A0D8               	btfss	status,0,c
   785  007C7C  0012               	return	
   786  007C7E  D7EE               	goto	l38
   787  007C80                     __end_of_delay_mx:
   788                           	opt stack 0
   789                           tblptru	equ	0xFF8
   790                           status	equ	0xFD8
   791                           
   792 ;; *************** function ___awmod *****************
   793 ;; Defined at:
   794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  dividend        2    0[COMRAM] int 
   797 ;;  divisor         2    2[COMRAM] int 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  sign            1    5[COMRAM] unsigned char 
   800 ;;  counter         1    4[COMRAM] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  2    0[COMRAM] int 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   810 ;;      Params:         4       0       0       0       0       0       0       0       0
   811 ;;      Locals:         2       0       0       0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0
   813 ;;      Totals:         6       0       0       0       0       0       0       0       0
   814 ;;Total ram usage:        6 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_mostrar
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text3
   824  007C80                     __ptext3:
   825                           	opt stack 0
   826  007C80                     ___awmod:
   827                           	opt stack 29
   828                           
   829                           ;incstack = 0
   830  007C80  0E00               	movlw	0
   831  007C82  6E06               	movwf	___awmod@sign,c
   832  007C84  AE02               	btfss	___awmod@dividend+1,7,c
   833  007C86  D006               	goto	l286
   834  007C88  6C01               	negf	___awmod@dividend,c
   835  007C8A  1E02               	comf	___awmod@dividend+1,f,c
   836  007C8C  B0D8               	btfsc	status,0,c
   837  007C8E  2A02               	incf	___awmod@dividend+1,f,c
   838  007C90  0E01               	movlw	1
   839  007C92  6E06               	movwf	___awmod@sign,c
   840  007C94                     l286:
   841  007C94  AE04               	btfss	___awmod@divisor+1,7,c
   842  007C96  D004               	goto	l287
   843  007C98  6C03               	negf	___awmod@divisor,c
   844  007C9A  1E04               	comf	___awmod@divisor+1,f,c
   845  007C9C  B0D8               	btfsc	status,0,c
   846  007C9E  2A04               	incf	___awmod@divisor+1,f,c
   847  007CA0                     l287:
   848  007CA0  5003               	movf	___awmod@divisor,w,c
   849  007CA2  1004               	iorwf	___awmod@divisor+1,w,c
   850  007CA4  B4D8               	btfsc	status,2,c
   851  007CA6  D018               	goto	l294
   852  007CA8  0E01               	movlw	1
   853  007CAA  6E05               	movwf	___awmod@counter,c
   854  007CAC  D004               	goto	l289
   855  007CAE  90D8               	bcf	status,0,c
   856  007CB0  3603               	rlcf	___awmod@divisor,f,c
   857  007CB2  3604               	rlcf	___awmod@divisor+1,f,c
   858  007CB4  2A05               	incf	___awmod@counter,f,c
   859  007CB6                     l289:
   860  007CB6  AE04               	btfss	___awmod@divisor+1,7,c
   861  007CB8  D7FA               	goto	l290
   862  007CBA                     u270:
   863  007CBA  5003               	movf	___awmod@divisor,w,c
   864  007CBC  5C01               	subwf	___awmod@dividend,w,c
   865  007CBE  5004               	movf	___awmod@divisor+1,w,c
   866  007CC0  5802               	subwfb	___awmod@dividend+1,w,c
   867  007CC2  A0D8               	btfss	status,0,c
   868  007CC4  D004               	goto	l293
   869  007CC6  5003               	movf	___awmod@divisor,w,c
   870  007CC8  5E01               	subwf	___awmod@dividend,f,c
   871  007CCA  5004               	movf	___awmod@divisor+1,w,c
   872  007CCC  5A02               	subwfb	___awmod@dividend+1,f,c
   873  007CCE                     l293:
   874  007CCE  90D8               	bcf	status,0,c
   875  007CD0  3204               	rrcf	___awmod@divisor+1,f,c
   876  007CD2  3203               	rrcf	___awmod@divisor,f,c
   877  007CD4  2E05               	decfsz	___awmod@counter,f,c
   878  007CD6  D7F1               	goto	u270
   879  007CD8                     l294:
   880  007CD8  5006               	movf	___awmod@sign,w,c
   881  007CDA  B4D8               	btfsc	status,2,c
   882  007CDC  D004               	goto	l295
   883  007CDE  6C01               	negf	___awmod@dividend,c
   884  007CE0  1E02               	comf	___awmod@dividend+1,f,c
   885  007CE2  B0D8               	btfsc	status,0,c
   886  007CE4  2A02               	incf	___awmod@dividend+1,f,c
   887  007CE6                     l295:
   888  007CE6  C001  F001         	movff	___awmod@dividend,?___awmod
   889  007CEA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   890  007CEE  0012               	return	
   891  007CF0                     __end_of___awmod:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function ___awdiv *****************
   897 ;; Defined at:
   898 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  dividend        2    0[COMRAM] int 
   901 ;;  divisor         2    2[COMRAM] int 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  quotient        2    6[COMRAM] int 
   904 ;;  sign            1    5[COMRAM] unsigned char 
   905 ;;  counter         1    4[COMRAM] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  2    0[COMRAM] int 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         4       0       0       0       0       0       0       0       0
   916 ;;      Locals:         4       0       0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0
   918 ;;      Totals:         8       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        8 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_mostrar
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text4
   929  007CF0                     __ptext4:
   930                           	opt stack 0
   931  007CF0                     ___awdiv:
   932                           	opt stack 29
   933                           
   934                           ;incstack = 0
   935  007CF0  0E00               	movlw	0
   936  007CF2  6E06               	movwf	___awdiv@sign,c
   937  007CF4  AE04               	btfss	___awdiv@divisor+1,7,c
   938  007CF6  D006               	goto	l273
   939  007CF8  6C03               	negf	___awdiv@divisor,c
   940  007CFA  1E04               	comf	___awdiv@divisor+1,f,c
   941  007CFC  B0D8               	btfsc	status,0,c
   942  007CFE  2A04               	incf	___awdiv@divisor+1,f,c
   943  007D00  0E01               	movlw	1
   944  007D02  6E06               	movwf	___awdiv@sign,c
   945  007D04                     l273:
   946  007D04  AE02               	btfss	___awdiv@dividend+1,7,c
   947  007D06  D006               	goto	l274
   948  007D08  6C01               	negf	___awdiv@dividend,c
   949  007D0A  1E02               	comf	___awdiv@dividend+1,f,c
   950  007D0C  B0D8               	btfsc	status,0,c
   951  007D0E  2A02               	incf	___awdiv@dividend+1,f,c
   952  007D10  0E01               	movlw	1
   953  007D12  1A06               	xorwf	___awdiv@sign,f,c
   954  007D14                     l274:
   955  007D14  0E00               	movlw	0
   956  007D16  6E08               	movwf	___awdiv@quotient+1,c
   957  007D18  0E00               	movlw	0
   958  007D1A  6E07               	movwf	___awdiv@quotient,c
   959  007D1C  5003               	movf	___awdiv@divisor,w,c
   960  007D1E  1004               	iorwf	___awdiv@divisor+1,w,c
   961  007D20  B4D8               	btfsc	status,2,c
   962  007D22  D01C               	goto	l281
   963  007D24  0E01               	movlw	1
   964  007D26  6E05               	movwf	___awdiv@counter,c
   965  007D28  D004               	goto	l276
   966  007D2A  90D8               	bcf	status,0,c
   967  007D2C  3603               	rlcf	___awdiv@divisor,f,c
   968  007D2E  3604               	rlcf	___awdiv@divisor+1,f,c
   969  007D30  2A05               	incf	___awdiv@counter,f,c
   970  007D32                     l276:
   971  007D32  AE04               	btfss	___awdiv@divisor+1,7,c
   972  007D34  D7FA               	goto	l277
   973  007D36                     u210:
   974  007D36  90D8               	bcf	status,0,c
   975  007D38  3607               	rlcf	___awdiv@quotient,f,c
   976  007D3A  3608               	rlcf	___awdiv@quotient+1,f,c
   977  007D3C  5003               	movf	___awdiv@divisor,w,c
   978  007D3E  5C01               	subwf	___awdiv@dividend,w,c
   979  007D40  5004               	movf	___awdiv@divisor+1,w,c
   980  007D42  5802               	subwfb	___awdiv@dividend+1,w,c
   981  007D44  A0D8               	btfss	status,0,c
   982  007D46  D005               	goto	l280
   983  007D48  5003               	movf	___awdiv@divisor,w,c
   984  007D4A  5E01               	subwf	___awdiv@dividend,f,c
   985  007D4C  5004               	movf	___awdiv@divisor+1,w,c
   986  007D4E  5A02               	subwfb	___awdiv@dividend+1,f,c
   987  007D50  8007               	bsf	___awdiv@quotient,0,c
   988  007D52                     l280:
   989  007D52  90D8               	bcf	status,0,c
   990  007D54  3204               	rrcf	___awdiv@divisor+1,f,c
   991  007D56  3203               	rrcf	___awdiv@divisor,f,c
   992  007D58  2E05               	decfsz	___awdiv@counter,f,c
   993  007D5A  D7ED               	goto	u210
   994  007D5C                     l281:
   995  007D5C  5006               	movf	___awdiv@sign,w,c
   996  007D5E  B4D8               	btfsc	status,2,c
   997  007D60  D004               	goto	l282
   998  007D62  6C07               	negf	___awdiv@quotient,c
   999  007D64  1E08               	comf	___awdiv@quotient+1,f,c
  1000  007D66  B0D8               	btfsc	status,0,c
  1001  007D68  2A08               	incf	___awdiv@quotient+1,f,c
  1002  007D6A                     l282:
  1003  007D6A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1004  007D6E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1005  007D72  0012               	return	
  1006  007D74                     __end_of___awdiv:
  1007                           	opt stack 0
  1008                           tblptru	equ	0xFF8
  1009                           status	equ	0xFD8
  1010                           
  1011 ;; *************** function _incrementa *****************
  1012 ;; Defined at:
  1013 ;;		line 20 in file "Contador0a99.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1027 ;;      Params:         0       0       0       0       0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1030 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1031 ;;Total ram usage:        0 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text5
  1041  007BDA                     __ptext5:
  1042                           	opt stack 0
  1043  007BDA                     _incrementa:
  1044                           	opt stack 30
  1045                           
  1046                           ;Contador0a99.c: 21: if (cnt<9999){
  1047                           
  1048                           ;incstack = 0
  1049  007BDA  BE14               	btfsc	_cnt+1,7,c
  1050  007BDC  D006               	goto	u150
  1051  007BDE  0E0F               	movlw	15
  1052  007BE0  5C13               	subwf	_cnt,w,c
  1053  007BE2  0E27               	movlw	39
  1054  007BE4  5814               	subwfb	_cnt+1,w,c
  1055  007BE6  B0D8               	btfsc	status,0,c
  1056  007BE8  0012               	return	
  1057  007BEA                     u150:
  1058                           
  1059                           ;Contador0a99.c: 22: if (RC0==1){
  1060  007BEA  A082               	btfss	3970,0,c	;volatile
  1061  007BEC  0012               	return	
  1062                           
  1063                           ;Contador0a99.c: 23: cnt++;
  1064  007BEE  4A13               	infsnz	_cnt,f,c
  1065  007BF0  2A14               	incf	_cnt+1,f,c
  1066  007BF2  0012               	return	
  1067  007BF4                     __end_of_incrementa:
  1068                           	opt stack 0
  1069                           tblptru	equ	0xFF8
  1070                           status	equ	0xFD8
  1071                           
  1072 ;; *************** function _delay *****************
  1073 ;; Defined at:
  1074 ;;		line 11 in file "Contador0a99.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  x               4    0[COMRAM] long 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0
  1089 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1091 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1092 ;;Total ram usage:        4 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text6
  1102  007C14                     __ptext6:
  1103                           	opt stack 0
  1104  007C14                     _delay:
  1105                           	opt stack 30
  1106                           
  1107                           ;Contador0a99.c: 12: long x=5000;
  1108                           
  1109                           ;incstack = 0
  1110  007C14  0E88               	movlw	136
  1111  007C16  6E01               	movwf	delay@x,c
  1112  007C18  0E13               	movlw	19
  1113  007C1A  6E02               	movwf	delay@x+1,c
  1114  007C1C  0E00               	movlw	0
  1115  007C1E  6E03               	movwf	delay@x+2,c
  1116  007C20  0E00               	movlw	0
  1117  007C22  6E04               	movwf	delay@x+3,c
  1118                           
  1119                           ;Contador0a99.c: 13: while(x>0) x--;
  1120  007C24  D008               	goto	l31
  1121  007C26                     l813:
  1122  007C26  0EFF               	movlw	255
  1123  007C28  2601               	addwf	delay@x,f,c
  1124  007C2A  0EFF               	movlw	255
  1125  007C2C  2202               	addwfc	delay@x+1,f,c
  1126  007C2E  0EFF               	movlw	255
  1127  007C30  2203               	addwfc	delay@x+2,f,c
  1128  007C32  0EFF               	movlw	255
  1129  007C34  2204               	addwfc	delay@x+3,f,c
  1130  007C36                     l31:
  1131  007C36  BE04               	btfsc	delay@x+3,7,c
  1132  007C38  0012               	return	
  1133  007C3A  5004               	movf	delay@x+3,w,c
  1134  007C3C  1003               	iorwf	delay@x+2,w,c
  1135  007C3E  1002               	iorwf	delay@x+1,w,c
  1136  007C40  E1F2               	bnz	l813
  1137  007C42  0401               	decf	delay@x,w,c
  1138  007C44  A0D8               	btfss	status,0,c
  1139  007C46  0012               	return	
  1140  007C48  D7EE               	goto	l32
  1141  007C4A                     __end_of_delay:
  1142                           	opt stack 0
  1143  0000                     tblptru	equ	0xFF8
  1144                           status	equ	0xFD8
  1145                           tblptru	equ	0xFF8
  1146                           status	equ	0xFD8
  1147                           
  1148                           	psect	rparam
  1149  0000                     tblptru	equ	0xFF8
  1150                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_mostrar
    _mostrar->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1234
                              _delay
                         _incrementa
                            _mostrar
 ---------------------------------------------------------------------------------
 (1) _mostrar                                              2     2      0    1219
                                              8 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                           _delay_mx
 ---------------------------------------------------------------------------------
 (2) _delay_mx                                             4     4      0      15
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _incrementa                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     4      0      15
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _incrementa
   _mostrar
     ___awdiv
     ___awmod
     _delay_mx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      14       1       21.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      20        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr 17 20:51:20 2018

                     l31 7C36                       l32 7C26                       l50 7E5E  
                     l51 7DEA                       l60 7E98                       l52 7DEE  
                     l37 7C6C                       l61 7E6E                       l53 7DF2  
                     l38 7C5C                       l70 7E8E                       l62 7EE6  
                     l54 7DF6                       l71 7E92                       l63 7E72  
                     l55 7DFA                       l72 7F1E                       l80 7F0C  
                     l64 7E76                       l48 7E10                       l56 7DFE  
                     l81 7F10                       l73 7EF4                       l65 7E7A  
                     l57 7E02                       l49 7DE6                       l90 7F8A  
                     l82 7F14                       l74 7F6C                       l66 7E7E  
                     l58 7E06                       l91 7F8E                       l83 7F18  
                     l75 7EF8                       l67 7E82                       l59 7E0A  
                     l84 7FA4                       l92 7F92                       l76 7EFC  
                     l68 7E86                       l93 7F96                       l85 7F7A  
                     l77 7F00                       l69 7E8A                       l94 7F9A  
                     l86 7FF2                       l78 7F04                       l95 7F9E  
                     l87 7F7E                       l79 7F08                       l88 7F82  
                     l89 7F86             ___awdiv@sign 0006                      l101 7C04  
                    l280 7D52                      l281 7D5C                      l273 7D04  
                    l282 7D6A                      l274 7D14                      l290 7CAE  
                    l276 7D32                      l277 7D2A                      l293 7CCE  
                    l294 7CD8                      l286 7C94                      l295 7CE6  
                    l287 7CA0                      l289 7CB6                      l813 7C26  
                    l729 7C5C                      _RC0 007C10                      _RC1 007C11  
                    _RC2 007C12                      _RC4 007C14                      _RC5 007C15  
                    _RC6 007C16                      u210 7D36                      u150 7BEA  
                    u270 7CBA                      _cnt 0013             ___awmod@sign 0006  
                   _main 7BF4                     start 0000             ___param_bank 000000  
                  ?_main 0001          __end_of___awdiv 7D74          __end_of___awmod 7CF0  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _PORTD 000F83  
                  _TRISC 000F94                    _TRISD 000F95                    _delay 7C14  
        __end_of_mostrar 8000                    status 000FD8          __initialization 7BCC  
           __end_of_main 7C14                   ??_main 000B            __activetblptr 000002  
                 ?_delay 0001         ___awdiv@dividend 0001         __end_of_delay_mx 7C80  
              ??___awdiv 0005                ??___awmod 0005                   _dezena 0011  
                 _milhar 000B                   delay@x 0001         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                   tblptru 000FF8  
              ??_mostrar 0009               __accesstop 0060  __end_of__initialization 7BD0  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_delay 7C4A  
                ??_delay 0001               __pnvCOMRAM 000B                ?_delay_mx 0001  
                __Hparam 0000                  __Lparam 0000               _incrementa 7BDA  
                ___awdiv 7CF0                  ___awmod 7C80                  __pcinit 7BCC  
                __ramtop 0800                  _centena 000D                  __ptext0 7BF4  
                __ptext1 7D74                  __ptext2 7C4A                  __ptext3 7C80  
                __ptext4 7CF0                  __ptext5 7BDA                  __ptext6 7C14  
       ___awmod@dividend 0001               ??_delay_mx 0001                  _mostrar 7D74  
                _unidade 000F     end_of_initialization 7BD0            __Lmediumconst 0000  
            ?_incrementa 0001      start_initialization 7BCC              __pbssCOMRAM 0013  
    __size_of_incrementa 001A        __size_of_delay_mx 0036                 ?___awdiv 0001  
               ?___awmod 0001                 ?_mostrar 0001           __size_of_delay 0036  
              delay_mx@x 0001                 __Hrparam 0000                 __Lrparam 0000  
           ??_incrementa 0001         __size_of___awdiv 0084         __size_of___awmod 0070  
               _delay_mx 7C4A         __size_of_mostrar 028C       __end_of_incrementa 7BF4  
          __size_of_main 0020  
